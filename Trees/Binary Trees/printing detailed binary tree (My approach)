class BinaryTreeNode():
    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None
def printTree(root):
    if root is None:
        return
    print(root.data)
    printTree(root.left)
    printTree(root.right)
def printTreeDeailed(root):
    if root is None:
        return
    if root.left == None and root.right == None:
        print(root.data)
        return
    else:
        print(root.data, end=" : ")
    if root.left is not None:
        print("L", root.left.data, end=", ")
    if root.right is not None:
        print("R", root.right.data)
    printTreeDeailed(root.left)
    printTreeDeailed(root.right)
bt1 = BinaryTreeNode(1)
bt2 = BinaryTreeNode(2)
bt3 = BinaryTreeNode(3)
bt4 = BinaryTreeNode(4)
bt5 = BinaryTreeNode(5)
bt6 = BinaryTreeNode(6)
bt7 = BinaryTreeNode(7)
bt1.left, bt1.right = bt2, bt3
bt2.left, bt2.right = bt4, bt5
bt3.left, bt3.right = bt6, bt7
printTreeDeailed(bt1)
